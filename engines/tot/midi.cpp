/* ScummVM - Graphic Adventure Engine
 *
 * ScummVM is the legal property of its developers, whose names
 * are too numerous to list here. Please refer to the COPYRIGHT
 * file distributed with this source distribution.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#include "audio/adlib_ms.h"
#include "audio/midiparser.h"
#include "common/debug.h"
#include "common/file.h"

#include "tot/midi.h"

namespace Tot {

uint8 rawInstrumentBank[128][11] = {
	{0x00, 0x00, 0x4F, 0x00, 0xF1, 0xD2, 0x51, 0x43, 0x00, 0x00, 0x06},
	{0x02, 0x12, 0x4F, 0x00, 0xF1, 0xD2, 0x51, 0x43, 0x00, 0x00, 0x02},
	{0x00, 0x11, 0x4A, 0x00, 0xF1, 0xD2, 0x53, 0x74, 0x00, 0x00, 0x06},
	{0x03, 0x11, 0x4F, 0x00, 0xF1, 0xD2, 0x53, 0x74, 0x01, 0x01, 0x06},
	{0x01, 0x11, 0x66, 0x00, 0xF1, 0xD2, 0x51, 0xC3, 0x00, 0x00, 0x06},
	{0xC0, 0xD2, 0x52, 0x00, 0xF1, 0xD2, 0x53, 0x94, 0x00, 0x00, 0x06},
	{0x12, 0x18, 0x86, 0x00, 0xF3, 0xFC, 0x00, 0x33, 0x00, 0x00, 0x08},
	{0xD0, 0x12, 0x4E, 0x00, 0xA8, 0x92, 0x32, 0xA7, 0x03, 0x02, 0x00},
	{0xC8, 0xD1, 0x4F, 0x00, 0xF2, 0xF3, 0x64, 0x77, 0x00, 0x00, 0x08},
	{0x33, 0x34, 0x0E, 0x00, 0x01, 0x7D, 0x11, 0x34, 0x00, 0x00, 0x08},
	{0x17, 0x16, 0x50, 0x00, 0xD1, 0xD3, 0x52, 0x92, 0x00, 0x01, 0x04},
	{0xE7, 0xE1, 0x21, 0x00, 0xF5, 0xF6, 0x77, 0x14, 0x00, 0x00, 0x08},
	{0x95, 0x81, 0x4E, 0x00, 0xDA, 0xF9, 0x25, 0x15, 0x00, 0x00, 0x0A},
	{0x27, 0x21, 0x1F, 0x00, 0xF5, 0xF5, 0x96, 0x57, 0x00, 0x00, 0x08},
	{0x87, 0xF1, 0x4E, 0x80, 0xB1, 0xE6, 0x33, 0x42, 0x00, 0x00, 0x00},
	{0x31, 0x11, 0x87, 0x80, 0xA1, 0x7D, 0x11, 0x43, 0x00, 0x00, 0x08},
	{0x32, 0xB1, 0x8C, 0x00, 0x91, 0xA1, 0x07, 0x19, 0x02, 0x00, 0x05},
	{0x31, 0xB4, 0x54, 0x80, 0xF1, 0xF5, 0x07, 0x19, 0x00, 0x00, 0x07},
	{0x24, 0x21, 0x40, 0x49, 0xFF, 0xFF, 0x0F, 0x0F, 0x00, 0x00, 0x01},
	{0xD2, 0xF1, 0x44, 0x80, 0x91, 0xA1, 0x57, 0x09, 0x01, 0x01, 0x03},
	{0x01, 0x02, 0x52, 0x80, 0xF0, 0xF0, 0x1F, 0x1F, 0x01, 0x00, 0x0A},
	{0x21, 0x32, 0x4F, 0x01, 0xF2, 0x52, 0x0B, 0x0B, 0x00, 0x01, 0x0A},
	{0xF0, 0xF2, 0x93, 0x00, 0xD8, 0xB3, 0x0B, 0x0B, 0x02, 0x01, 0x0A},
	{0x20, 0x31, 0x5D, 0x00, 0xF2, 0x52, 0x0B, 0x0B, 0x03, 0x02, 0x00},
	{0x01, 0x01, 0x1B, 0x00, 0xF4, 0xF3, 0x25, 0x46, 0x02, 0x00, 0x00},
	{0x11, 0x01, 0x0F, 0x00, 0xF4, 0xF3, 0x25, 0x46, 0x01, 0x00, 0x00},
	{0x01, 0x01, 0x27, 0x00, 0xF1, 0xF4, 0x1F, 0x88, 0x02, 0x00, 0x0A},
	{0x12, 0x13, 0x44, 0x00, 0xEA, 0xD2, 0x32, 0xE7, 0x01, 0x01, 0x00},
	{0x30, 0x31, 0x45, 0x00, 0xA4, 0xF5, 0x32, 0xE7, 0x03, 0x00, 0x00},
	{0x21, 0x21, 0x0F, 0x00, 0xF5, 0xF1, 0x17, 0x78, 0x02, 0x01, 0x04},
	{0x01, 0x20, 0x41, 0x00, 0xD1, 0xC1, 0x34, 0xA5, 0x03, 0x03, 0x04},
	{0x10, 0x12, 0x43, 0x00, 0xA7, 0xE3, 0x97, 0xE7, 0x03, 0x02, 0x00},
	{0x20, 0x21, 0x28, 0x00, 0xC5, 0xD2, 0x15, 0xA4, 0x00, 0x00, 0x0C},
	{0x30, 0x21, 0x16, 0x00, 0xF2, 0xF3, 0x9F, 0x78, 0x00, 0x00, 0x0C},
	{0x30, 0x21, 0x11, 0x00, 0x82, 0xF3, 0x9F, 0x78, 0x00, 0x00, 0x0A},
	{0x21, 0x21, 0x23, 0x00, 0x73, 0x93, 0x1A, 0x87, 0x00, 0x00, 0x0C},
	{0x30, 0x21, 0x0E, 0x00, 0x62, 0xF3, 0x55, 0x68, 0x02, 0x00, 0x0A},
	{0x30, 0x22, 0x0C, 0x00, 0x62, 0xD5, 0xB5, 0x98, 0x01, 0x00, 0x08},
	{0x70, 0x72, 0x93, 0x40, 0x64, 0xA1, 0x43, 0x43, 0x00, 0x00, 0x0A},
	{0x30, 0x32, 0x8D, 0x80, 0x44, 0x92, 0x43, 0x43, 0x02, 0x00, 0x0A},
	{0xE1, 0xE2, 0x4E, 0x00, 0x65, 0x61, 0x43, 0x44, 0x02, 0x02, 0x00},
	{0xA1, 0xA2, 0x8E, 0x00, 0x65, 0x63, 0x43, 0x45, 0x02, 0x02, 0x00},
	{0xB0, 0x61, 0x87, 0x40, 0xD1, 0x62, 0x11, 0x15, 0x02, 0x01, 0x06},
	{0xF0, 0x20, 0x8A, 0x80, 0xB1, 0xA0, 0x11, 0x15, 0x02, 0x01, 0x06},
	{0xF1, 0xE2, 0x89, 0x40, 0x73, 0x43, 0x01, 0x05, 0x02, 0x00, 0x06},
	{0x31, 0x21, 0x57, 0x80, 0xF8, 0xF7, 0xF9, 0xE6, 0x03, 0x02, 0x0E},
	{0x32, 0x01, 0x24, 0x80, 0xF1, 0xF5, 0x35, 0x35, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x04, 0x00, 0xAA, 0xD2, 0xC8, 0xB3, 0x00, 0x00, 0x0A},
	{0xE0, 0xF1, 0x4F, 0x00, 0xD4, 0x55, 0x0B, 0x0B, 0x02, 0x02, 0x0A},
	{0xE0, 0xF0, 0x52, 0x00, 0x96, 0x35, 0x05, 0x01, 0x02, 0x02, 0x0A},
	{0xE1, 0xF1, 0x4F, 0x00, 0x36, 0x45, 0x05, 0x02, 0x02, 0x02, 0x0A},
	{0xE2, 0xE1, 0x48, 0x80, 0x21, 0x41, 0x43, 0x45, 0x02, 0x01, 0x00},
	{0xE0, 0xF1, 0x16, 0x00, 0x41, 0x20, 0x52, 0x72, 0x02, 0x02, 0x00},
	{0xE0, 0xF1, 0x11, 0x00, 0x01, 0xD0, 0x52, 0x72, 0x02, 0x02, 0x00},
	{0xE0, 0xF1, 0x1A, 0x00, 0x61, 0x30, 0x52, 0x73, 0x00, 0x02, 0x00},
	{0x50, 0x50, 0x0B, 0x00, 0x84, 0xA4, 0x4B, 0x99, 0x00, 0x00, 0x0A},
	{0x31, 0x61, 0x1C, 0x80, 0x41, 0x92, 0x0B, 0x3B, 0x00, 0x00, 0x0E},
	{0xB1, 0x61, 0x1C, 0x00, 0x41, 0x92, 0x1F, 0x3B, 0x00, 0x00, 0x0E},
	{0x20, 0x21, 0x18, 0x00, 0x52, 0xA2, 0x15, 0x24, 0x00, 0x00, 0x0C},
	{0xC1, 0xC1, 0x94, 0x80, 0x74, 0xA3, 0xEA, 0xF5, 0x02, 0x01, 0x0E},
	{0x21, 0x21, 0x28, 0x00, 0x41, 0x81, 0xB4, 0x98, 0x00, 0x00, 0x0E},
	{0x21, 0x21, 0x1D, 0x00, 0x51, 0xE1, 0xAE, 0x3E, 0x02, 0x01, 0x0E},
	{0xE0, 0xE0, 0x93, 0x80, 0x51, 0x81, 0xA6, 0x97, 0x02, 0x01, 0x0E},
	{0xE0, 0xE1, 0x93, 0x80, 0x51, 0xE1, 0xA6, 0x97, 0x02, 0x01, 0x0E},
	{0xE0, 0xF2, 0x4B, 0x01, 0xD8, 0xB3, 0x0B, 0x0B, 0x02, 0x01, 0x08},
	{0xE0, 0xF1, 0x49, 0x01, 0xB8, 0xB3, 0x0B, 0x0B, 0x02, 0x01, 0x08},
	{0xE0, 0xF0, 0x4E, 0x01, 0x98, 0xC3, 0x0B, 0x0B, 0x01, 0x02, 0x08},
	{0xE0, 0xF1, 0x4C, 0x01, 0x88, 0xD3, 0x0B, 0x0B, 0x01, 0x01, 0x08},
	{0xF1, 0xE4, 0xC5, 0x00, 0x7E, 0x8C, 0x17, 0x0E, 0x00, 0x00, 0x08},
	{0x60, 0x72, 0x4F, 0x00, 0xD8, 0xB3, 0x0B, 0x0B, 0x00, 0x01, 0x0A},
	{0x31, 0x72, 0xD1, 0x80, 0xD5, 0x91, 0x19, 0x1B, 0x00, 0x00, 0x0C},
	{0x32, 0x71, 0xC8, 0x80, 0xD5, 0x73, 0x19, 0x1B, 0x00, 0x00, 0x0C},
	{0xE2, 0x62, 0x6A, 0x00, 0x9E, 0x55, 0x8F, 0x2A, 0x00, 0x00, 0x0E},
	{0xE0, 0x61, 0xEC, 0x00, 0x7E, 0x65, 0x8F, 0x2A, 0x00, 0x00, 0x0E},
	{0x62, 0xA2, 0x88, 0x83, 0x84, 0x75, 0x27, 0x17, 0x00, 0x00, 0x09},
	{0x62, 0xA2, 0x84, 0x83, 0x84, 0x75, 0x27, 0x17, 0x00, 0x00, 0x09},
	{0xE3, 0x62, 0x6D, 0x00, 0x57, 0x57, 0x04, 0x77, 0x00, 0x00, 0x0E},
	{0xF1, 0xE1, 0x28, 0x00, 0x57, 0x67, 0x34, 0x5D, 0x03, 0x00, 0x0E},
	{0xD1, 0x72, 0xC7, 0x00, 0x31, 0x42, 0x0F, 0x09, 0x00, 0x00, 0x0B},
	{0xF2, 0x72, 0xC7, 0x00, 0x51, 0x42, 0x05, 0x69, 0x00, 0x00, 0x0B},
	{0x23, 0x31, 0x4F, 0x00, 0x51, 0x60, 0x5B, 0x25, 0x01, 0x01, 0x00},
	{0x22, 0x31, 0x48, 0x00, 0x31, 0xC0, 0x9B, 0x65, 0x02, 0x01, 0x00},
	{0xF1, 0xE1, 0x28, 0x00, 0x57, 0x67, 0x34, 0x0D, 0x03, 0x00, 0x0E},
	{0xE1, 0xE1, 0x23, 0x00, 0x57, 0x67, 0x04, 0x4D, 0x03, 0x00, 0x0E},
	{0xE2, 0x31, 0x42, 0x08, 0x78, 0xF3, 0x0B, 0x0B, 0x01, 0x01, 0x08},
	{0xE2, 0xE2, 0x21, 0x00, 0x11, 0x40, 0x52, 0x73, 0x01, 0x01, 0x08},
	{0x23, 0xA4, 0xC0, 0x00, 0x51, 0x35, 0x07, 0x79, 0x01, 0x02, 0x0D},
	{0x24, 0xA0, 0xC0, 0x00, 0x51, 0x75, 0x07, 0x09, 0x01, 0x02, 0x09},
	{0xE0, 0xF0, 0x16, 0x00, 0xB1, 0xE0, 0x51, 0x75, 0x02, 0x02, 0x00},
	{0x03, 0xA4, 0xC0, 0x00, 0x52, 0xF4, 0x03, 0x55, 0x00, 0x00, 0x09},
	{0xE1, 0xE1, 0x93, 0x80, 0x31, 0xA1, 0xA6, 0x97, 0x01, 0x01, 0x0A},
	{0xF0, 0x71, 0xC4, 0x80, 0x10, 0x11, 0x01, 0xC1, 0x02, 0x02, 0x01},
	{0xC1, 0xE0, 0x4F, 0x00, 0xB1, 0x12, 0x53, 0x74, 0x02, 0x02, 0x06},
	{0xC0, 0x41, 0x6D, 0x00, 0xF9, 0xF2, 0x21, 0xB3, 0x01, 0x00, 0x0E},
	{0xE3, 0xE2, 0x4C, 0x00, 0x21, 0xA1, 0x43, 0x45, 0x01, 0x01, 0x00},
	{0xE3, 0xE2, 0x0C, 0x00, 0x11, 0x80, 0x52, 0x73, 0x01, 0x01, 0x08},
	{0x26, 0x88, 0xC0, 0x00, 0x55, 0xF8, 0x47, 0x19, 0x00, 0x00, 0x0B},
	{0x23, 0xE4, 0xD4, 0x00, 0xE5, 0x35, 0x03, 0x65, 0x00, 0x00, 0x07},
	{0x27, 0x32, 0xC0, 0x00, 0x32, 0xA4, 0x62, 0x33, 0x00, 0x00, 0x00},
	{0xD0, 0x31, 0x4E, 0x00, 0x98, 0xA2, 0x32, 0x47, 0x01, 0x02, 0x00},
	{0xF0, 0x71, 0xC0, 0x00, 0x93, 0x43, 0x03, 0x02, 0x01, 0x00, 0x0F},
	{0xE0, 0xF1, 0x1A, 0x80, 0x13, 0x33, 0x52, 0x13, 0x01, 0x02, 0x00},
	{0xE0, 0xF1, 0x1A, 0x00, 0x45, 0x32, 0xBA, 0x91, 0x00, 0x02, 0x00},
	{0x11, 0x15, 0x18, 0x03, 0x58, 0xA2, 0x02, 0x72, 0x01, 0x00, 0x0A},
	{0x10, 0x18, 0x80, 0x40, 0xF1, 0xF1, 0x53, 0x53, 0x00, 0x00, 0x00},
	{0x31, 0x17, 0x86, 0x80, 0xA1, 0x7D, 0x11, 0x23, 0x00, 0x00, 0x08},
	{0x10, 0x18, 0x80, 0x40, 0xF1, 0xF6, 0x53, 0x54, 0x00, 0x00, 0x00},
	{0x31, 0x34, 0x21, 0x00, 0xF5, 0x93, 0x56, 0xE8, 0x01, 0x00, 0x08},
	{0x03, 0x15, 0x4F, 0x00, 0xF1, 0xD6, 0x39, 0x74, 0x03, 0x00, 0x06},
	{0x31, 0x22, 0x43, 0x00, 0x6E, 0x8B, 0x17, 0x0C, 0x01, 0x02, 0x02},
	{0x31, 0x22, 0x1C, 0x80, 0x61, 0x52, 0x03, 0x67, 0x00, 0x00, 0x0E},
	{0x60, 0xF0, 0x0C, 0x80, 0x81, 0x61, 0x03, 0x0C, 0x00, 0x01, 0x08},
	{0x27, 0x05, 0x55, 0x00, 0x31, 0xA7, 0x62, 0x75, 0x00, 0x00, 0x00},
	{0x95, 0x16, 0x81, 0x00, 0xE7, 0x96, 0x01, 0x67, 0x00, 0x00, 0x04},
	{0x0C, 0x01, 0x87, 0x80, 0xF0, 0xF2, 0x05, 0x05, 0x01, 0x01, 0x04},
	{0x35, 0x11, 0x44, 0x00, 0xF8, 0xF5, 0xFF, 0x75, 0x00, 0x00, 0x0E},
	{0x10, 0x10, 0x0B, 0x00, 0xA7, 0xD5, 0xEC, 0xF5, 0x00, 0x00, 0x00},
	{0x20, 0x01, 0x0B, 0x00, 0xA8, 0xD6, 0xC8, 0xB7, 0x00, 0x00, 0x00},
	{0x00, 0x01, 0x0B, 0x00, 0x88, 0xD5, 0xC4, 0xB7, 0x00, 0x00, 0x00},
	{0x0C, 0x10, 0x8F, 0x80, 0x41, 0x33, 0x31, 0x2B, 0x00, 0x03, 0x08},
	{0x17, 0xF7, 0x00, 0x00, 0x3B, 0xEA, 0xDF, 0x97, 0x03, 0x00, 0x0B},
	{0x12, 0x18, 0x06, 0x00, 0x73, 0x3C, 0x02, 0x74, 0x00, 0x00, 0x0E},
	{0x02, 0x08, 0x00, 0x00, 0x3E, 0x14, 0x01, 0xF3, 0x02, 0x02, 0x0E},
	{0xF5, 0xF6, 0xD4, 0x00, 0xEB, 0x45, 0x03, 0x68, 0x00, 0x00, 0x07},
	{0xF0, 0xCA, 0x00, 0xC0, 0xDA, 0xB0, 0x71, 0x17, 0x01, 0x01, 0x08},
	{0xF0, 0xE2, 0x00, 0xC0, 0x1E, 0x11, 0x11, 0x11, 0x01, 0x01, 0x08},
	{0xE7, 0xE8, 0x00, 0x04, 0x34, 0x10, 0x00, 0xB2, 0x02, 0x02, 0x0E},
	{0x0C, 0x04, 0x00, 0x00, 0xF0, 0xF6, 0xF0, 0xE6, 0x02, 0x00, 0x0E}};

uint8_t instData[128][11] = {
	{0x01, 0x11, 0x4F, 0x00, 0xF1, 0xD2, 0x51, 0x43, 0x00, 0x00, 0x06},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x12, 0x4F, 0x06, 0xF1, 0xD2},
	{0x51, 0x43, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x11, 0x4A, 0x04, 0xF1, 0xD2, 0x53, 0x74, 0x00, 0x00, 0x06, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x03, 0x11, 0x4F, 0x04, 0xF1, 0xD2, 0x53},
	{0x74, 0x01, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x11},
	{0x66, 0x00, 0xF1, 0xD2, 0x51, 0xC3, 0x00, 0x00, 0x06, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0xC0, 0xD2, 0x52, 0x05, 0xF1, 0xD2, 0x53, 0x94},
	{0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x18, 0x86},
	{0x00, 0xF3, 0xFC, 0x00, 0x33, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xD0, 0x12, 0x4E, 0x03, 0xA8, 0x92, 0x32, 0xA7, 0x03},
	{0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0xD1, 0x4F, 0x08},
	{0xF2, 0xF3, 0x64, 0x77, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x33, 0x34, 0x0E, 0x00, 0x01, 0x7D, 0x11, 0x34, 0x00, 0x00},
	{0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x16, 0x50, 0x00, 0xD1},
	{0xD3, 0x52, 0x92, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0xE7, 0xE1, 0x21, 0x06, 0xF5, 0xF6, 0x77, 0x14, 0x00, 0x00, 0x08},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0x81, 0x4E, 0x00, 0xDA, 0xF9},
	{0x25, 0x15, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27},
	{0x21, 0x1F, 0x03, 0xF5, 0xF5, 0x96, 0x57, 0x00, 0x00, 0x08, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x87, 0xF1, 0x4E, 0x80, 0xB1, 0xE6, 0x33},
	{0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x11},
	{0x87, 0x80, 0xA1, 0x7D, 0x11, 0x43, 0x00, 0x00, 0x08, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x32, 0xB1, 0x8C, 0x03, 0x91, 0xA1, 0x07, 0x19},
	{0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0xB4, 0x54},
	{0x83, 0xF1, 0xF5, 0x07, 0x19, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x24, 0x21, 0x40, 0x53, 0xFF, 0xFF, 0x0F, 0x0F, 0x00},
	{0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD2, 0xF1, 0x44, 0x80},
	{0x91, 0xA1, 0x57, 0x09, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x01, 0x02, 0x52, 0x88, 0xF0, 0xF0, 0x1F, 0x1F, 0x01, 0x00},
	{0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x32, 0x4F, 0x0B, 0xF2},
	{0x52, 0x0B, 0x0B, 0x00, 0x01, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0xF0, 0xF2, 0x93, 0x07, 0xD8, 0xB3, 0x0B, 0x0B, 0x02, 0x01, 0x0A},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x31, 0x5D, 0x07, 0xF2, 0x52},
	{0x0B, 0x0B, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01},
	{0x01, 0x1B, 0x04, 0xF4, 0xF3, 0x25, 0x46, 0x02, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x11, 0x01, 0x0F, 0x07, 0xF4, 0xF3, 0x25},
	{0x46, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01},
	{0x27, 0x00, 0xF1, 0xF4, 0x1F, 0x88, 0x02, 0x00, 0x0A, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x12, 0x13, 0x44, 0x03, 0xEA, 0xD2, 0x32, 0xE7},
	{0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x31, 0x45},
	{0x00, 0xA4, 0xF5, 0x32, 0xE7, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x21, 0x21, 0x0F, 0x03, 0xF5, 0xF1, 0x17, 0x78, 0x02},
	{0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x20, 0x41, 0x07},
	{0xD1, 0xC1, 0x34, 0xA5, 0x03, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x10, 0x12, 0x43, 0x02, 0xA7, 0xE3, 0x97, 0xE7, 0x03, 0x02},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x21, 0x28, 0x01, 0xC5},
	{0xD2, 0x15, 0xA4, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x30, 0x21, 0x16, 0x05, 0xF2, 0xF3, 0x9F, 0x78, 0x00, 0x00, 0x0C},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x21, 0x11, 0x05, 0x82, 0xF3},
	{0x9F, 0x78, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21},
	{0x21, 0x23, 0x00, 0x73, 0x93, 0x1A, 0x87, 0x00, 0x00, 0x0C, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x30, 0x21, 0x0E, 0x09, 0x62, 0xF3, 0x55},
	{0x68, 0x02, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x22},
	{0x0C, 0x00, 0x62, 0xD5, 0xB5, 0x98, 0x01, 0x00, 0x08, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x70, 0x72, 0x93, 0x43, 0x64, 0xA1, 0x43, 0x43},
	{0x00, 0x00, 0x0A, 0x06, 0x00, 0x00, 0x00, 0x00, 0x30, 0x32, 0x8D},
	{0x85, 0x44, 0x92, 0x43, 0x43, 0x02, 0x00, 0x0A, 0x06, 0x00, 0x00},
	{0x00, 0x00, 0xE1, 0xE2, 0x4E, 0x00, 0x65, 0x61, 0x43, 0x44, 0x02},
	{0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA1, 0xA2, 0x8E, 0x05},
	{0x65, 0x63, 0x43, 0x45, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0xB0, 0x61, 0x87, 0x40, 0xD1, 0x62, 0x11, 0x15, 0x02, 0x01},
	{0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x20, 0x8A, 0x80, 0xB1},
	{0xA0, 0x11, 0x15, 0x02, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0xF1, 0xE2, 0x89, 0x43, 0x73, 0x43, 0x01, 0x05, 0x02, 0x00, 0x06},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x21, 0x57, 0x80, 0xF8, 0xF7},
	{0xF9, 0xE6, 0x03, 0x02, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32},
	{0x01, 0x24, 0x82, 0xF1, 0xF5, 0x35, 0x35, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0xAA, 0xD2, 0xC8},
	{0xB3, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF1},
	{0x4F, 0x03, 0xD4, 0x55, 0x0B, 0x0B, 0x02, 0x02, 0x0A, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0xE0, 0xF0, 0x52, 0x00, 0x96, 0x35, 0x05, 0x01},
	{0x02, 0x02, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xF1, 0x4F},
	{0x00, 0x36, 0x45, 0x05, 0x02, 0x02, 0x02, 0x0A, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xE2, 0xE1, 0x48, 0x81, 0x21, 0x41, 0x43, 0x45, 0x02},
	{0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF1, 0x16, 0x00},
	{0x41, 0x20, 0x52, 0x72, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0xE0, 0xF1, 0x11, 0x00, 0x01, 0xD0, 0x52, 0x72, 0x02, 0x02},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF1, 0x1A, 0x00, 0x61},
	{0x30, 0x52, 0x73, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0x50, 0x50, 0x0B, 0x07, 0x84, 0xA4, 0x4B, 0x99, 0x00, 0x00, 0x0A},
	{0x06, 0x00, 0x00, 0x00, 0x00, 0x31, 0x61, 0x1C, 0x84, 0x41, 0x92},
	{0x0B, 0x3B, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB1},
	{0x61, 0x1C, 0x05, 0x41, 0x92, 0x1F, 0x3B, 0x00, 0x00, 0x0E, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x20, 0x21, 0x18, 0x00, 0x52, 0xA2, 0x15},
	{0x24, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xC1},
	{0x94, 0x84, 0x74, 0xA3, 0xEA, 0xF5, 0x02, 0x01, 0x0E, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x21, 0x21, 0x28, 0x00, 0x41, 0x81, 0xB4, 0x98},
	{0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x21, 0x1D},
	{0x01, 0x51, 0xE1, 0xAE, 0x3E, 0x02, 0x01, 0x0E, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xE0, 0xE0, 0x93, 0x82, 0x51, 0x81, 0xA6, 0x97, 0x02},
	{0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE1, 0x93, 0x83},
	{0x51, 0xE1, 0xA6, 0x97, 0x02, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0xE0, 0xF2, 0x4B, 0x0B, 0xD8, 0xB3, 0x0B, 0x0B, 0x02, 0x01},
	{0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF1, 0x49, 0x0B, 0xB8},
	{0xB3, 0x0B, 0x0B, 0x02, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0xE0, 0xF0, 0x4E, 0x0B, 0x98, 0xC3, 0x0B, 0x0B, 0x01, 0x02, 0x08},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF1, 0x4C, 0x0B, 0x88, 0xD3},
	{0x0B, 0x0B, 0x01, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1},
	{0xE4, 0xC5, 0x08, 0x7E, 0x8C, 0x17, 0x0E, 0x00, 0x00, 0x08, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x60, 0x72, 0x4F, 0x0A, 0xD8, 0xB3, 0x0B},
	{0x0B, 0x00, 0x01, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x72},
	{0xD1, 0x80, 0xD5, 0x91, 0x19, 0x1B, 0x00, 0x00, 0x0C, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0x32, 0x71, 0xC8, 0x80, 0xD5, 0x73, 0x19, 0x1B},
	{0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x62, 0x6A},
	{0x00, 0x9E, 0x55, 0x8F, 0x2A, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xE0, 0x61, 0xEC, 0x00, 0x7E, 0x65, 0x8F, 0x2A, 0x00},
	{0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0xA2, 0x88, 0x8D},
	{0x84, 0x75, 0x27, 0x17, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x62, 0xA2, 0x84, 0x8D, 0x84, 0x75, 0x27, 0x17, 0x00, 0x00},
	{0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0x62, 0x6D, 0x00, 0x57},
	{0x57, 0x04, 0x77, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00},
	{0xF1, 0xE1, 0x28, 0x00, 0x57, 0x67, 0x34, 0x5D, 0x03, 0x00, 0x0E},
	{0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0x72, 0xC7, 0x03, 0x31, 0x42},
	{0x0F, 0x09, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2},
	{0x72, 0xC7, 0x05, 0x51, 0x42, 0x05, 0x69, 0x00, 0x00, 0x0B, 0x00},
	{0x00, 0x00, 0x00, 0x00, 0x23, 0x31, 0x4F, 0x06, 0x51, 0x60, 0x5B},
	{0x25, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x31},
	{0x48, 0x06, 0x31, 0xC0, 0x9B, 0x65, 0x02, 0x01, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00, 0xF1, 0xE1, 0x28, 0x04, 0x57, 0x67, 0x34, 0x0D},
	{0x03, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0xE1, 0x23},
	{0x00, 0x57, 0x67, 0x04, 0x4D, 0x03, 0x00, 0x0E, 0x00, 0x00, 0x00},
	{0x00, 0x00, 0xE2, 0x31, 0x42, 0x12, 0x78, 0xF3, 0x0B, 0x0B, 0x01},
	{0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0xE2, 0x21, 0x07},
	{0x11, 0x40, 0x52, 0x73, 0x01, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00},
	{0x00, 0x23, 0xA4, 0xC0, 0x00, 0x51, 0x35, 0x07, 0x79, 0x01, 0x02},
	{0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0xA0, 0xC0, 0x01, 0x51},
	{0x75, 0x07, 0x09, 0x01, 0x02, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00}};

const uint8_t data[1408] = {
	0xF1,
	0xD2,
	0x53,
	0x74,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x03,
	0x11,
	0x4F,
	0x04,
	0xF1,
	0xD2,
	0x53,
	0x74,
	0x01,
	0x01,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x11,
	0x66,
	0x00,
	0xF1,
	0xD2,
	0x51,
	0xC3,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xC0,
	0xD2,
	0x52,
	0x05,
	0xF1,
	0xD2,
	0x53,
	0x94,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x12,
	0x18,
	0x86,
	0x00,
	0xF3,
	0xFC,
	0x00,
	0x33,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xD0,
	0x12,
	0x4E,
	0x03,
	0xA8,
	0x92,
	0x32,
	0xA7,
	0x03,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xC8,
	0xD1,
	0x4F,
	0x08,
	0xF2,
	0xF3,
	0x64,
	0x77,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x33,
	0x34,
	0x0E,
	0x00,
	0x01,
	0x7D,
	0x11,
	0x34,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x17,
	0x16,
	0x50,
	0x00,
	0xD1,
	0xD3,
	0x52,
	0x92,
	0x00,
	0x01,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE7,
	0xE1,
	0x21,
	0x06,
	0xF5,
	0xF6,
	0x77,
	0x14,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x95,
	0x81,
	0x4E,
	0x00,
	0xDA,
	0xF9,
	0x25,
	0x15,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x27,
	0x21,
	0x1F,
	0x03,
	0xF5,
	0xF5,
	0x96,
	0x57,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x87,
	0xF1,
	0x4E,
	0x80,
	0xB1,
	0xE6,
	0x33,
	0x42,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x31,
	0x11,
	0x87,
	0x80,
	0xA1,
	0x7D,
	0x11,
	0x43,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x32,
	0xB1,
	0x8C,
	0x03,
	0x91,
	0xA1,
	0x07,
	0x19,
	0x02,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x31,
	0xB4,
	0x54,
	0x83,
	0xF1,
	0xF5,
	0x07,
	0x19,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x24,
	0x21,
	0x40,
	0x53,
	0xFF,
	0xFF,
	0x0F,
	0x0F,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xD2,
	0xF1,
	0x44,
	0x80,
	0x91,
	0xA1,
	0x57,
	0x09,
	0x01,
	0x01,
	0x03,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x02,
	0x52,
	0x88,
	0xF0,
	0xF0,
	0x1F,
	0x1F,
	0x01,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x21,
	0x32,
	0x4F,
	0x0B,
	0xF2,
	0x52,
	0x0B,
	0x0B,
	0x00,
	0x01,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF0,
	0xF2,
	0x93,
	0x07,
	0xD8,
	0xB3,
	0x0B,
	0x0B,
	0x02,
	0x01,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x20,
	0x31,
	0x5D,
	0x07,
	0xF2,
	0x52,
	0x0B,
	0x0B,
	0x03,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x1B,
	0x04,
	0xF4,
	0xF3,
	0x25,
	0x46,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x11,
	0x01,
	0x0F,
	0x07,
	0xF4,
	0xF3,
	0x25,
	0x46,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x27,
	0x00,
	0xF1,
	0xF4,
	0x1F,
	0x88,
	0x02,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x12,
	0x13,
	0x44,
	0x03,
	0xEA,
	0xD2,
	0x32,
	0xE7,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x31,
	0x45,
	0x00,
	0xA4,
	0xF5,
	0x32,
	0xE7,
	0x03,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x21,
	0x21,
	0x0F,
	0x03,
	0xF5,
	0xF1,
	0x17,
	0x78,
	0x02,
	0x01,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x20,
	0x41,
	0x07,
	0xD1,
	0xC1,
	0x34,
	0xA5,
	0x03,
	0x03,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x10,
	0x12,
	0x43,
	0x02,
	0xA7,
	0xE3,
	0x97,
	0xE7,
	0x03,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x20,
	0x21,
	0x28,
	0x01,
	0xC5,
	0xD2,
	0x15,
	0xA4,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x21,
	0x16,
	0x05,
	0xF2,
	0xF3,
	0x9F,
	0x78,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x21,
	0x11,
	0x05,
	0x82,
	0xF3,
	0x9F,
	0x78,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x21,
	0x21,
	0x23,
	0x00,
	0x73,
	0x93,
	0x1A,
	0x87,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x21,
	0x0E,
	0x09,
	0x62,
	0xF3,
	0x55,
	0x68,
	0x02,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x22,
	0x0C,
	0x00,
	0x62,
	0xD5,
	0xB5,
	0x98,
	0x01,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x70,
	0x72,
	0x93,
	0x43,
	0x64,
	0xA1,
	0x43,
	0x43,
	0x00,
	0x00,
	0x0A,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x30,
	0x32,
	0x8D,
	0x85,
	0x44,
	0x92,
	0x43,
	0x43,
	0x02,
	0x00,
	0x0A,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE1,
	0xE2,
	0x4E,
	0x00,
	0x65,
	0x61,
	0x43,
	0x44,
	0x02,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xA1,
	0xA2,
	0x8E,
	0x05,
	0x65,
	0x63,
	0x43,
	0x45,
	0x02,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xB0,
	0x61,
	0x87,
	0x40,
	0xD1,
	0x62,
	0x11,
	0x15,
	0x02,
	0x01,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF0,
	0x20,
	0x8A,
	0x80,
	0xB1,
	0xA0,
	0x11,
	0x15,
	0x02,
	0x01,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF1,
	0xE2,
	0x89,
	0x43,
	0x73,
	0x43,
	0x01,
	0x05,
	0x02,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x31,
	0x21,
	0x57,
	0x80,
	0xF8,
	0xF7,
	0xF9,
	0xE6,
	0x03,
	0x02,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x32,
	0x01,
	0x24,
	0x82,
	0xF1,
	0xF5,
	0x35,
	0x35,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0xAA,
	0xD2,
	0xC8,
	0xB3,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF1,
	0x4F,
	0x03,
	0xD4,
	0x55,
	0x0B,
	0x0B,
	0x02,
	0x02,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF0,
	0x52,
	0x00,
	0x96,
	0x35,
	0x05,
	0x01,
	0x02,
	0x02,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE1,
	0xF1,
	0x4F,
	0x00,
	0x36,
	0x45,
	0x05,
	0x02,
	0x02,
	0x02,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE2,
	0xE1,
	0x48,
	0x81,
	0x21,
	0x41,
	0x43,
	0x45,
	0x02,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF1,
	0x16,
	0x00,
	0x41,
	0x20,
	0x52,
	0x72,
	0x02,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF1,
	0x11,
	0x00,
	0x01,
	0xD0,
	0x52,
	0x72,
	0x02,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF1,
	0x1A,
	0x00,
	0x61,
	0x30,
	0x52,
	0x73,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x50,
	0x50,
	0x0B,
	0x07,
	0x84,
	0xA4,
	0x4B,
	0x99,
	0x00,
	0x00,
	0x0A,
	0x06,
	0x00,
	0x00,
	0x00,
	0x00,
	0x31,
	0x61,
	0x1C,
	0x84,
	0x41,
	0x92,
	0x0B,
	0x3B,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xB1,
	0x61,
	0x1C,
	0x05,
	0x41,
	0x92,
	0x1F,
	0x3B,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x20,
	0x21,
	0x18,
	0x00,
	0x52,
	0xA2,
	0x15,
	0x24,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xC1,
	0xC1,
	0x94,
	0x84,
	0x74,
	0xA3,
	0xEA,
	0xF5,
	0x02,
	0x01,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x21,
	0x21,
	0x28,
	0x00,
	0x41,
	0x81,
	0xB4,
	0x98,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x21,
	0x21,
	0x1D,
	0x01,
	0x51,
	0xE1,
	0xAE,
	0x3E,
	0x02,
	0x01,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xE0,
	0x93,
	0x82,
	0x51,
	0x81,
	0xA6,
	0x97,
	0x02,
	0x01,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xE1,
	0x93,
	0x83,
	0x51,
	0xE1,
	0xA6,
	0x97,
	0x02,
	0x01,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF2,
	0x4B,
	0x0B,
	0xD8,
	0xB3,
	0x0B,
	0x0B,
	0x02,
	0x01,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF1,
	0x49,
	0x0B,
	0xB8,
	0xB3,
	0x0B,
	0x0B,
	0x02,
	0x01,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF0,
	0x4E,
	0x0B,
	0x98,
	0xC3,
	0x0B,
	0x0B,
	0x01,
	0x02,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF1,
	0x4C,
	0x0B,
	0x88,
	0xD3,
	0x0B,
	0x0B,
	0x01,
	0x01,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF1,
	0xE4,
	0xC5,
	0x08,
	0x7E,
	0x8C,
	0x17,
	0x0E,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x60,
	0x72,
	0x4F,
	0x0A,
	0xD8,
	0xB3,
	0x0B,
	0x0B,
	0x00,
	0x01,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x31,
	0x72,
	0xD1,
	0x80,
	0xD5,
	0x91,
	0x19,
	0x1B,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x32,
	0x71,
	0xC8,
	0x80,
	0xD5,
	0x73,
	0x19,
	0x1B,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE2,
	0x62,
	0x6A,
	0x00,
	0x9E,
	0x55,
	0x8F,
	0x2A,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0x61,
	0xEC,
	0x00,
	0x7E,
	0x65,
	0x8F,
	0x2A,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x62,
	0xA2,
	0x88,
	0x8D,
	0x84,
	0x75,
	0x27,
	0x17,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x62,
	0xA2,
	0x84,
	0x8D,
	0x84,
	0x75,
	0x27,
	0x17,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE3,
	0x62,
	0x6D,
	0x00,
	0x57,
	0x57,
	0x04,
	0x77,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF1,
	0xE1,
	0x28,
	0x00,
	0x57,
	0x67,
	0x34,
	0x5D,
	0x03,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xD1,
	0x72,
	0xC7,
	0x03,
	0x31,
	0x42,
	0x0F,
	0x09,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF2,
	0x72,
	0xC7,
	0x05,
	0x51,
	0x42,
	0x05,
	0x69,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x23,
	0x31,
	0x4F,
	0x06,
	0x51,
	0x60,
	0x5B,
	0x25,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x22,
	0x31,
	0x48,
	0x06,
	0x31,
	0xC0,
	0x9B,
	0x65,
	0x02,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xF1,
	0xE1,
	0x28,
	0x04,
	0x57,
	0x67,
	0x34,
	0x0D,
	0x03,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE1,
	0xE1,
	0x23,
	0x00,
	0x57,
	0x67,
	0x04,
	0x4D,
	0x03,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE2,
	0x31,
	0x42,
	0x12,
	0x78,
	0xF3,
	0x0B,
	0x0B,
	0x01,
	0x01,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE2,
	0xE2,
	0x21,
	0x07,
	0x11,
	0x40,
	0x52,
	0x73,
	0x01,
	0x01,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x23,
	0xA4,
	0xC0,
	0x00,
	0x51,
	0x35,
	0x07,
	0x79,
	0x01,
	0x02,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x24,
	0xA0,
	0xC0,
	0x01,
	0x51,
	0x75,
	0x07,
	0x09,
	0x01,
	0x02,
	0x09,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE0,
	0xF0,
	0x16,
	0x03,
	0xB1,
	0xE0,
	0x51,
	0x75,
	0x02,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x03,
	0xA4,
	0xC0,
	0x04,
	0x52,
	0xF4,
	0x03,
	0x55,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE1,
	0xE1,
	0x93,
	0x81,
};

MidiPlayer::MidiPlayer() {
	_driver = nullptr;
	_driverMsMusic = nullptr;

	_paused = false;
	_musicData = nullptr;
	_parserMusic = nullptr;
}

MidiPlayer::~MidiPlayer() {
	stop();

	if (_driverMsMusic) {
		_driverMsMusic->setTimerCallback(nullptr, nullptr);
		_driverMsMusic->close();
	} else if (_driver) {
		_driver->setTimerCallback(nullptr, nullptr);
		_driver->close();
	}
	if (_parserMusic)
		delete _parserMusic;
	if (_driverMsMusic) {
		delete _driverMsMusic;
		_driverMsMusic = nullptr;
	} else if (_driver) {
		delete _driver;
		_driver = nullptr;
	}
}
int MidiPlayer::open() {

	// Don't call open() twice!
	assert(!_driver);
	int devFlags = MDT_MIDI | MDT_ADLIB;

	OPL::Config::OplType oplType =
		MidiDriver_ADLIB_Multisource::detectOplType(OPL::Config::kOpl3) ? OPL::Config::kOpl3 : OPL::Config::kOpl2;

	_driverMsMusic = new MidiDriver_AdLib(OPL::Config::kOpl3);

	_parserMusic = MidiParser::createParser_SMF();
	_driver = _driverMsMusic;

	if (_driverMsMusic)
		_driverMsMusic->property(MidiDriver::PROP_USER_VOLUME_SCALING, true);
	int returnCode = _driver->open();
	if (returnCode != 0)
		error("MidiPlayer::open - Failed to open MIDI music driver - error code %d.", returnCode);

	syncSoundSettings();
	// Connect the driver(s) and the parser(s).
	_parserMusic->setMidiDriver(_driver);
	_parserMusic->setTimerRate(_driver->getBaseTempo());
	_driver->setTimerCallback(this, &onTimer);
	debug("Successfully opened driver");
	return 0;
}

void MidiPlayer::onTimer(void *data) {
	MidiPlayer *p = (MidiPlayer *)data;
	if (p->_parserMusic) {
		p->_parserMusic->onTimer();
	}
}

bool MidiPlayer::isPlaying() {
	return _parserMusic->isPlaying();
}

void MidiPlayer::stop() {
	if (_parserMusic) {
		_parserMusic->stopPlaying();
		if (_driverMsMusic)
			_driverMsMusic->deinitSource(0);
	}
}

void MidiPlayer::pause(bool b) {
	if (_paused == b || !_driver)
		return;

	_paused = b;
	if (_paused) {
		if (_parserMusic)
			_parserMusic->pausePlaying();
	} else {
		if (_parserMusic)
			_parserMusic->resumePlaying();
	}
}

void MidiPlayer::syncSoundSettings() {
	if (_driverMsMusic)
		_driverMsMusic->syncSoundSettings();
}
void MidiPlayer::setLoop(bool loop) {
	if (_parserMusic)
		_parserMusic->property(MidiParser::mpAutoLoop, loop);
}
void MidiPlayer::load(Common::SeekableReadStream *in, int32 size) {

	MidiParser *parser = _parserMusic;
	if (!parser)
		return;

	if (size < 0) {
		// Use the parser to determine the size of the MIDI data.
		int64 startPos = in->pos();
		size = parser->determineDataSize(in);
		if (size < 0) {
			warning("MidiPlayer::load - Could not determine size of music data");
			return;
		}
		// determineDataSize might move the stream position, so return it to
		// the original position.
		in->seek(startPos);
	}

	parser->unloadMusic();

	byte **dataPtr = &_musicData;
	if (*dataPtr) {
		delete[] *dataPtr;
	}

	*dataPtr = new byte[size];
	in->read(*dataPtr, size);

	parser->loadMusic(*dataPtr, size);
	debug("Successfully loaded Music");
}

void MidiPlayer::play(int track) {
	MidiParser *parser = _parserMusic;
	if (!parser)
		return;
	if (parser->setTrack(track)) {
		if (_driverMsMusic)
			// Reset the volume to neutral (in case the previous track was
			// faded out).
			_driverMsMusic->resetSourceVolume(0);
		parser->startPlaying();
	} else {
		parser->stopPlaying();
		warning("MidiPlayer::play - Could not play %s track %i", "music", track);
	}
}

MidiDriver_AdLib::MidiDriver_AdLib(OPL::Config::OplType oplType, int timerFrequency) : MidiDriver_ADLIB_Multisource::MidiDriver_ADLIB_Multisource(oplType, timerFrequency) {
	_dsfInstrumentBank = new OplInstrumentDefinition[128];
	loadInstrumentBankFromDriver(11048);
}

MidiDriver_AdLib::~MidiDriver_AdLib() {
	delete[] _dsfInstrumentBank;
}

void MidiDriver_AdLib::loadInstrumentBankFromDriver(long offset) {
	Common::File driverFile;
	if (!driverFile.open("CTMIDI.DRV")) {
		error("Couldnt find midi file!");
	}
	debug("Loading bank from offset: %d", offset);
	driverFile.seek(offset, SEEK_SET);
	uint8 *data = (uint8 *)malloc(128 * (11 + 21));
	driverFile.read(data, 128 * (11 + 21));
	loadInstrumentBank(data);
	driverFile.close();

	_instrumentBank = _dsfInstrumentBank;
	_rhythmBank = _dsfInstrumentBank;
}

void MidiDriver_AdLib::loadInstrumentBank(uint8 *instrumentBankData) {
	debug("Load instrument bank!");
	for (int i = 0; i < 128; i++) {
		AdLibIbkInstrumentDefinition instrument;

		instrument.o0FreqMultMisc = *instrumentBankData++;
		instrument.o1FreqMultMisc = *instrumentBankData++;

		instrument.o0Level = *instrumentBankData++;
		instrument.o1Level = *instrumentBankData++;

		instrument.o0DecayAttack = *instrumentBankData++;
		instrument.o1DecayAttack = *instrumentBankData++;

		instrument.o0ReleaseSustain = *instrumentBankData++;
		instrument.o1ReleaseSustain = *instrumentBankData++;

		instrument.o0WaveformSelect = *instrumentBankData++;
		instrument.o1WaveformSelect = *instrumentBankData++;

		instrument.connectionFeedback = *instrumentBankData++;

		instrument.rhythmType = *instrumentBankData++;
		instrument.transpose = *instrumentBankData++;
		instrument.rhythmNote = *instrumentBankData++;
		instrument.padding1 = *instrumentBankData++;
		instrument.padding2 = *instrumentBankData++;
		instrument.toOplInstrumentDefinition(_dsfInstrumentBank[i]);
	}
	debug("Loaded instrument bank!");
}

} // End of namespace Tot
